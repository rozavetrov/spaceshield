go.property("max_speed", 200)
go.property("min_y", 60)
go.property("max_y", 580)
go.property("min_x", 60)
go.property("max_x", 900)

function init(self)
	-- Let the script receive input from the player
	msg.post(".", "acquire_input_focus")
	-- maximum speed the instance can be moved
	-- velocity of the instance, initially zero
	self.velocity = vmath.vector3()
	self.x = 0
	self.y = 0
end

function update(self, dt)
	if self.y < self.min_y then
		self.y = self.min_y
	elseif self.y > self.max_y then
		self.y = self.max_y
	end
	if self.x < self.min_x then
		self.x = self.min_x
	elseif self.x > self.max_x then
		self.x = self.max_x
	end

	-- go.set_position(p + dt * self.velocity)
	-- self.velocity = vmath.vector3()
	
	local position = vmath.vector3(self.y, self.x, 0)
	go.set_position(position)

	-- to shot factory 
	msg.post("factory#factory", "shipVector", {shipVector = position})
end

function on_message(self, message_id, message, sender)
	if message_id == hash("create_player") then
		self.x = message.coords[1]
		self.y = message.coords[2]
	end
	if message_id == hash("move") then
		self.x = message.coords[1]
		self.y = message.coords[2]
	end
end

function on_input(self, action_id, action)
	local p = go.get_position()
	rads = math.atan2(action.y - p.y, action.x - p.x)
	go.set(".", "euler.z", math.deg(rads) - 90)

	-- Up
	if action_id == hash("up") then
		-- self.velocity.y = self.max_speed
		msg.post("main", "up")

	elseif action_id == hash("down") then
		-- self.velocity.y = -self.max_speed
		msg.post("main", "down")

	elseif action_id == hash("left") then
		-- self.velocity.x = -self.max_speed
		msg.post("main", "left")

	elseif action_id == hash("right") then
		-- self.velocity.x = self.max_speed
		msg.post("main", "right")
	end
end